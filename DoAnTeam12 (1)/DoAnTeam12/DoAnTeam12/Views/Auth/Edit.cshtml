@model DoAnTeam12.Models.Account.UserModel

@{
    ViewBag.Title = "Edit Account";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gradient-to-br from-gray-100 to-sky-100 min-h-screen p-6 font-sans antialiased">

    <div class="max-w-2xl mx-auto bg-white p-10 rounded-3xl shadow-2xl">
        <h2 class="text-4xl font-bold mb-6 text-indigo-700 border-b-2 pb-3 border-indigo-300 tracking-tight">Edit Account</h2>

        @if (ViewData.ModelState.Any(x => x.Value.Errors.Any()))
        {
            <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4" role="alert">
                <strong class="font-bold">Error!</strong>
                <span class="block sm:inline">
                    @Html.ValidationSummary(false, "", new { @class = "text-red-700" })
                </span>
            </div>
        }

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.Id)

            <div class="space-y-6">

                <div>
                    @Html.LabelFor(model => model.UserName, new { @class = "block text-sm font-semibold text-gray-700 mb-1" })
                    @Html.EditorFor(model => model.UserName, new
                    {
                        htmlAttributes = new
                        {
                            @class = "w-full px-4 py-2 rounded-xl border border-gray-300 bg-gray-200 text-gray-600 cursor-not-allowed shadow-inner",
                            @readonly = "readonly"
                        }
                    })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-red-500 text-xs mt-1" })
                </div>

                <div>
                    @Html.LabelFor(model => model.Email, new { @class = "block text-sm font-semibold text-gray-700 mb-1" })
                    @Html.EditorFor(model => model.Email, new
                    {
                        htmlAttributes = new
                        {
                            @class = "w-full px-4 py-2 rounded-xl border border-gray-300 bg-gray-200 text-gray-600 cursor-not-allowed shadow-inner",
                            @readonly = "readonly"
                        }
                    })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-red-500 text-xs mt-1" })
                </div>

                <div>
                    @Html.LabelFor(model => model.Mobile, new { @class = "block text-sm font-semibold text-gray-700 mb-1" })
                    @Html.EditorFor(model => model.Mobile, new
                    {
                        htmlAttributes = new
                        {
                            @class = "w-full px-4 py-2 rounded-xl border border-gray-300 bg-gray-200 text-gray-600 cursor-not-allowed shadow-inner",
                            @readonly = "readonly"
                        }
                    })
                    @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-red-500 text-xs mt-1" })
                </div>

                <div>
                    @Html.LabelFor(model => model.Password, new { @class = "block text-sm font-semibold text-gray-700 mb-1" })
                    @Html.EditorFor(model => model.Password, new
                    {
                        htmlAttributes = new
                        {
                            @class = "w-full px-4 py-2 rounded-xl border border-gray-300 shadow-md focus:outline-none focus:ring-2 focus:ring-emerald-400 sm:text-sm transition-all duration-150",
                            type = "password"
                        }
                    })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-red-500 text-xs mt-1" })
                </div>

                <div class="flex items-center">
                    @Html.EditorFor(model => model.IsActive, new
                    {
                        htmlAttributes = new
                        {
                            @class = "h-5 w-5 text-emerald-600 border-gray-300 rounded focus:ring-emerald-500"
                        }
                    })
                    @Html.LabelFor(model => model.IsActive, new { @class = "ml-2 block text-sm font-medium text-gray-800" })
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-red-500 text-xs ml-2" })
                </div>

                <div>
                    @Html.LabelFor(model => model.Role, new { @class = "block text-sm font-semibold text-gray-700 mb-1" })
                    @{
                        List<SelectListItem> roleOptions = new List<SelectListItem>
                                {
                            new SelectListItem { Text = "Admin", Value = "admin" },
                            new SelectListItem { Text = "User", Value = "user" },
                            new SelectListItem { Text = "HR", Value = "hr" },
                            new SelectListItem { Text = "Payroll", Value = "payroll" }
                        };
                    }
                    @Html.DropDownListFor(model => model.Role, roleOptions, "Select a role", new
                    {
                        @class = "w-full px-4 py-2 rounded-xl border border-gray-300 shadow-md focus:outline-none focus:ring-2 focus:ring-indigo-400 sm:text-sm transition-all duration-150"
                    })
                    @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-red-500 text-xs mt-1" })
                </div>

                <div class="flex items-center justify-between pt-6">
                    <button type="submit" class="bg-emerald-600 hover:bg-emerald-700 text-white font-bold py-2 px-6 rounded-xl shadow-lg transition duration-300 ease-in-out focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-emerald-500">
                        Save
                    </button>
                    @Html.ActionLink("Back to list", "Index", null, new
                    {
                        @class = "text-indigo-600 hover:text-indigo-800 font-semibold text-sm underline transition duration-150"
                    })
                </div>
            </div>
        }
    </div>

</body>
</html>
