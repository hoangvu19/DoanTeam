@model DoAnTeam12.Models.Employee.EmployeeModel

@{
    ViewBag.Title = "Edit Employee";
}

<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet" />
<!-- Thêm Bootstrap Icons -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css" rel="stylesheet" />

<style>
    .form-title {
        font-size: 28px;
        font-weight: 600;
        margin-bottom: 25px;
        color: #2c3e50;
    }

    .form-container {
        max-width: 900px;
        margin: 40px auto;
        background-color: #fff;
        border-radius: 12px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        padding: 40px;
    }

    .form-label {
        font-weight: 500;
    }

    .form-group {
        margin-bottom: 20px;
    }

    .form-actions {
        margin-top: 30px;
    }

    .btn-custom {
        min-width: 120px;
        font-size: 16px;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: 6px;
    }

    .text-danger {
        font-size: 0.875rem;
    }

    media (max-width: 768px) {
        .form-row > .col-md-6 {
            margin-bottom: 20px;
        }
    }
</style>

<div class="form-container">
    <h2 class="form-title">Edit Employee</h2>

    @using (Html.BeginForm("Edit", "Employee", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.EmployeeID)

        <fieldset>
            <legend class="mb-3">Personal Information</legend>
            <div class="form-row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(m => m.FullName, new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.FullName, new { @class = "form-control", placeholder = "Enter full name", required = "required" })
                    @Html.ValidationMessageFor(m => m.FullName, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(m => m.DateOfBirth, new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.DateOfBirth, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", required = "required" })
                    @Html.ValidationMessageFor(m => m.DateOfBirth, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(m => m.Gender, new { @class = "form-label" })
                    @Html.DropDownListFor(m => m.Gender, new SelectList(new[] { "Male", "Female" }), "Select Gender", new { @class = "form-control", required = "required" })
                    @Html.ValidationMessageFor(m => m.Gender, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(m => m.PhoneNumber, new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control", placeholder = "xxx xxx xxxx", required = "required", type = "tel" })
                    @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(m => m.Email, new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "example@gmail.com", type = "email", required = "required" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(m => m.HireDate, new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.HireDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", required = "required" })
                    @Html.ValidationMessageFor(m => m.HireDate, "", new { @class = "text-danger" })
                </div>
            </div>
        </fieldset>

        <fieldset class="mt-4">
            <legend class="mb-3">Work Information</legend>
            <div class="form-row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(m => m.DepartmentID, new { @class = "form-label" })
                    @Html.DropDownListFor(m => m.DepartmentID, (SelectList)ViewBag.Departments, "Select Department", new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.DepartmentID, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(m => m.PositionID, new { @class = "form-label" })
                    @Html.DropDownListFor(m => m.PositionID, (SelectList)ViewBag.Positions, "Select Position", new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.PositionID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(m => m.Status, new { @class = "form-label" })
                    @Html.DropDownListFor(m => m.Status, new SelectList(new[] { "Active", "Inactive" }), "Select Status", new { @class = "form-control", required = "required" })
                    @Html.ValidationMessageFor(m => m.Status, "", new { @class = "text-danger" })
                </div>

            </div>

        </fieldset>

        <div class="form-actions">
            <button type="submit" class="btn btn-primary btn-custom">
                <i class="bi bi-save2"></i> Save
            </button>
            <a href="@Url.Action("List")" class="btn btn-secondary btn-custom">
                <i class="bi bi-x-circle"></i> Cancel
            </a>

        </div>
    }
</div>
