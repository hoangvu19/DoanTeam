<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewBag.Title</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css">
    <style>
        * {
            -webkit-box-sizing: border-box;
            -moz-box-sizing: border-box;
            box-sizing: border-box;
            font-family: "Poppins", sans-serif;
            margin: 0;
            padding: 0;
        }

        :root {
            --main-color: #685cfe;
            --main-transition: 0.3s all ease-in-out;
            --body-bg: #f0f0f0;
            --text-color: #333;
            --sidebar-bg: #fff;
            --sidebar-text: #555e8f;
            --sidebar-hover-bg: #ebf0fe;
            --sidebar-hover-text: var(--main-color);
            --dark-body-bg: #121212;
            --dark-text-color: #eee;
            --dark-sidebar-bg: #1e1e1e;
            --dark-sidebar-text: #ccc;
            --dark-sidebar-hover-bg: #333;
        }

        body {
            background-color: var(--body-bg);
            color: var(--text-color);
            display: flex;
            transition: var(--main-transition);
        }

            body.dark-mode {
                background-color: var(--dark-body-bg);
                color: var(--dark-text-color);
            }

        ::selection {
            color: white;
            background: var(--main-color);
        }

        .sidebar {
            width: 100px;
            background-color: var(--sidebar-bg);
            color: var(--sidebar-text);
            padding: 20px;
            position: fixed;
            border-top-right-radius: 15px;
            border-bottom-right-radius: 15px;
            height: calc(100% - 40px); 
            top: 50%;
            transform: translateY(-50%);
            overflow: hidden;
            transition: width var(--main-transition), background-color var(--main-transition), color var(--main-transition);
            z-index: 10;
        }

            .sidebar:hover {
                width: 250px;
            }

            .sidebar .profile {
                width: 55px;
                height: 55px;
                border-radius: 15px;
                color: #fff;
                background-color: var(--main-color);
                display: grid;
                place-items: center;
                font-size: 25px;
                margin-bottom: 20px;
                transition: margin-bottom var(--main-transition);
            }

            .sidebar:hover .profile {
                margin-bottom: 30px;
            }

            .sidebar ul {
                padding-bottom: 20px;
                list-style: none;
            }

                .sidebar ul span {
                    color: #8f99cc;
                    text-transform: uppercase;
                    font-weight: 400;
                    font-size: 12px; 
                    display: block;
                    padding: 0 10px 10px;
                    opacity: 0;
                    visibility: hidden;
                    transition: opacity 0.2s ease-in-out, visibility 0.2s ease-in-out, padding-left var(--main-transition);
                }

            .sidebar:hover ul span {
                opacity: 1;
                visibility: visible;
                padding-left: 0;
            }

            .sidebar ul li {
                padding-left: 0;
                transition: padding-left var(--main-transition);
            }

            .sidebar:hover ul li {
                padding-left: 10px;
            }

            .sidebar ul li a {
                padding: 10px;
                display: flex;
                align-items: center;
                gap: 10px;
                border-radius: 10px; 
                transition: background-color var(--main-transition), color var(--main-transition);
                font-size: 15px;
                width: 100%;
                color: var(--sidebar-text);
                font-weight: 500;
                text-decoration: none;
            }

            .sidebar:hover a {
                width: 100%;
            }

            .sidebar ul li a:hover {
                background-color: var(--sidebar-hover-bg);
                color: var(--sidebar-hover-text);
            }

            .sidebar ul li a ion-icon {
                font-size: 20px; 
                min-width: 24px; 
                text-align: center;
            }

            .sidebar ul li.noti a ion-icon {
                position: relative;
            }

                .sidebar ul li.noti a ion-icon::before {
                    content: "";
                    position: absolute;
                    right: -2px;
                    background-color: #3761ee;
                    width: 8px;
                    height: 8px;
                    border-radius: 50%;
                    top: 0;
                }

            .sidebar ul li.likes a ion-icon {
                position: relative;
            }

                .sidebar ul li.likes a ion-icon::before {
                    content: "";
                    position: absolute;
                    right: -2px;
                    background-color: #e45447;
                    width: 8px;
                    height: 8px;
                    border-radius: 50%;
                    top: 0; 
                }

            .sidebar ul li a p {
                visibility: hidden;
                opacity: 0;
                white-space: nowrap;
                overflow: hidden;
                text-overflow: ellipsis;
                transition: opacity 0.2s ease-in-out, visibility 0.2s ease-in-out;
            }

            .sidebar:hover ul li a p {
                visibility: visible;
                opacity: 1;
            }

            .sidebar ul li.switch-theme {
                position: relative;
            }

                .sidebar ul li.switch-theme button {
                    background-color: #ddd;
                    border: none;
                    border-radius: 15px; /* Adjusted border-radius */
                    height: 25px;
                    width: 45px; /* Adjusted width */
                    padding: 3px; /* Adjusted padding */
                    position: absolute;
                    right: 10px; /* Adjusted position */
                    visibility: hidden;
                    opacity: 0;
                    cursor: pointer;
                    transition: opacity 0.2s ease-in-out, visibility 0.2s ease-in-out, background-color var(--main-transition);
                }

            .sidebar:hover ul li.switch-theme button {
                visibility: visible;
                opacity: 1;
            }

            .sidebar ul li.switch-theme button .circle {
                border-radius: 50%;
                background-color: #fff;
                height: 19px;
                width: 19px; 
                transition: transform 0.3s ease-in-out, background-color var(--main-transition);
            }

        /*body.dark-mode .sidebar {
            background-color: var(--dark-sidebar-bg);
            color: var(--dark-sidebar-text);
        }

            body.dark-mode .sidebar ul li a {
                color: var(--dark-sidebar-text);
            }

                body.dark-mode .sidebar ul li a:hover {
                    background-color: var(--dark-sidebar-hover-bg);
                    color: var(--main-color);
                }

            body.dark-mode .sidebar ul span {
                color: #666;
            }

            body.dark-mode .sidebar ul li.switch-theme button {
                background-color: #444;
            }

                body.dark-mode .sidebar ul li.switch-theme button .circle {
                    background-color: #222;
                    transform: translateX(20px);*/ /* Adjusted for new button width */
                /*}*/

        .content {
            flex-grow: 1;
            padding: 20px;
            margin-left: 100px;
            transition: margin-left var(--main-transition);
        }

        .sidebar:hover ~ .content {
            margin-left: 250px; /* Adjusted to match expanded width */
        }

        hr {
            border: 0;
            border-top: 1px solid #ccc;
            margin: 20px 0;
        }

        body.dark-mode hr {
            border-top-color: #444;
        }
    </style>
    <link rel="stylesheet" href="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.css">
</head>
<body>
    <div class="sidebar">
        <div class="profile">
            <ion-icon name="person-outline"></ion-icon>
        </div>
        <ul>
            <span>Analytics</span>
            @if (Session["Role"] != null && Session["Role"].ToString().ToLower() == "admin")
            {
                <li>
                    <a href="@Url.Action("Dashboard", "Dashboard")">
                        <ion-icon name="home-outline"></ion-icon>
                        <p>Dashboard</p>
                    </a>
                </li>
            }
          
               
                <li class="likes">
                    <a href="@Url.Action("Index", "User")">
                        <ion-icon name="people-outline"></ion-icon>
                        <p>Users</p>
                    </a>
                </li>
            
        </ul>
        <ul>
            @if (Session["Role"] != null && (Session["Role"].ToString().ToLower() == "admin" || Session["Role"].ToString().ToLower() == "payroll"))
            {
                <span>Accountant</span>
                <li>
                    <a href="@Url.Action("Index", "Payroll")">
                        <ion-icon name="cash-outline"></ion-icon>
                        <p>Payroll</p>
                    </a>
                </li>

                @*<li>
                    <a href="@Url.Action("Attendance", "Home")">
                        <ion-icon name="calendar-outline"></ion-icon>
                        <p>Attendance</p>
                    </a>
                </li>*@
            }
        </ul>
        <ul>
            @if (Session["Role"] != null && (Session["Role"].ToString().ToLower() == "admin" || Session["Role"].ToString().ToLower() == "hr"))
            {
                <span>Human Resources</span>
                <li>
                    <a href="@Url.Action("List", "Employee")">
                        <ion-icon name="briefcase-outline"></ion-icon>
                        <p>Employees</p>
                    </a>
                </li>
                <li>
                    <a href="@Url.Action("List", "Department")">
                        <ion-icon name="business-outline"></ion-icon>
                        <p>Departments</p>
                    </a>
                </li>
                <li class="noti">
                    <a href="@Url.Action("Alerts", "Notification")">
                        <ion-icon name="notifications-outline"></ion-icon>
                        <p>Smart Alerts</p>
                    </a>
                </li>
            }
        </ul>
        <ul>
            <span>Custom</span>
            @if (Session["Role"] != null && Session["Role"].ToString().ToLower() == "admin")
            {
                <li>
                    <a href="@Url.Action("Index", "Auth")">
                        <ion-icon name="settings-outline"></ion-icon>
                        <p>Admin Settings</p>
                    </a>
                </li>
            }
            @if (Session["Role"] != null && Session["Role"].ToString().ToLower() == "admin")
            {

               <li>
                   <a href="@Url.Action("Send", "Gmail")">
                       <ion-icon name="mail-outline"></ion-icon>
                       <p>Gmail Settings</p>
                   </a>
               </li>
            }
            <li>
                <a href="@Url.Action("Login", "Account")">
                    <ion-icon name="log-out-outline"></ion-icon>
                    <p>Logout</p>
                </a>
            </li>
            @*<li class="switch-theme">
            <button id="darkModeToggle">
                <div class="circle"></div>
            </button>
        </li>*@
        </ul>
    </div>
    <div class="content">
        @RenderBody()
        <hr />
    </div>
    @*<script>
        document.addEventListener('DOMContentLoaded', () => {
            const darkModeToggle = document.getElementById('darkModeToggle');
            const body = document.body;
            const circle = document.querySelector('.sidebar ul li.switch-theme button .circle');

             Check for saved dark mode preference
            const savedDarkMode = localStorage.getItem('darkMode');
            if (savedDarkMode === 'true') {
                body.classList.add('dark-mode');
                circle.style.transform = 'translateX(20px)'; // Adjusted for new button width
            }

            darkModeToggle.addEventListener('click', () => {
                body.classList.toggle('dark-mode');
                const isDarkMode = body.classList.contains('dark-mode');
                circle.style.transform = isDarkMode ? 'translateX(20px)' : 'translateX(0)'; // Adjusted for new button width
                localStorage.setItem('darkMode', isDarkMode); // Save preference
            });
        });
    </script>*@
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)
    <script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
    <script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>
</body>
</html>