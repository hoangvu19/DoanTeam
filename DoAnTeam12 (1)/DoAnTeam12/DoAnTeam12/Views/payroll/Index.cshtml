@model List<DoAnTeam12.Models.Payroll.PayrollModels>
@{
    ViewBag.Title = "Payroll List";
}

<div class="container">
    <div class="payroll-header">
        <div class="payroll-icon">
            <i class="fas fa-file-invoice-dollar"></i>
        </div>
        <div class="payroll-info">
            <h1 class="payroll-heading">Payroll List</h1>
            <p class="payroll-desc">Track employee salaries, bonuses, and deductions</p>
        </div>
    </div>
</div>

<style>
    .payroll-header {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 16px;
        background-color: #f8f9fa;
        padding: 20px 30px;
        border-radius: 12px;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.08);
        margin-bottom: 30px;
    }

    .payroll-icon i {
        font-size: 48px;
        color: #007bff;
    }

    .payroll-info {
        text-align: left;
    }

    .payroll-heading {
        margin: 0;
        font-size: 28px;
        color: #1e1e2f;
        font-weight: 700;
    }

    .payroll-desc {
        margin: 4px 0 0;
        font-size: 15px;
        color: #6c757d;
    }

    body {
        font-family: 'Segoe UI', sans-serif;
        background-color: #f5f7fa;
    }

    .payroll-title {
        font-size: 2.2rem;
        font-weight: 700;
        color: #333;
        text-align: center;
        text-transform: uppercase;
        letter-spacing: 1.5px;
        padding: 20px 0 10px;
        border-bottom: 3px solid #007bff;
        margin-bottom: 30px;
    }

    .payroll-container {
        padding: 20px 30px;
    }

    .filter-container {
        display: flex;
        flex-wrap: wrap;
        align-items: flex-end;
        gap: 20px;
        margin-bottom: 25px;
        padding: 10px;
        background: #fff;
        border: 1px solid #e0e0e0;
        border-radius: 6px;
    }

        .filter-container > div {
            display: flex;
            flex-direction: column;
        }

    .filter-input,
    .filter-select {
        padding: 8px 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
        min-width: 200px;
        font-size: 14px;
        transition: border 0.2s ease-in-out;
    }

        .filter-input:focus,
        .filter-select:focus {
            border-color: #007bff;
            outline: none;
        }

    .filter-button {
        background-color: #007bff;
        color: white;
        padding: 8px 14px;
        border: none;
        border-radius: 5px;
        font-size: 14px;
        font-weight: 500;
        cursor: pointer;
        transition: background-color 0.2s;
    }

        .filter-button:hover {
            background-color: #0056b3;
        }

    .btn.btn-primary {
        background-color: #28a745;
        color: white;
        padding: 8px 14px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        text-decoration: none;
        font-size: 14px;
        font-weight: 500;
        display: inline-flex;
        align-items: center;
    }

        .btn.btn-primary i {
            margin-right: 6px;
        }

        .btn.btn-primary:hover {
            background-color: #218838;
        }

    .payroll-table {
        width: 100%;
        border-collapse: collapse;
        background: #fff;
        border: 1px solid #dee2e6;
        border-radius: 6px;
        overflow: hidden;
    }

    .action-buttons {
        display: flex;
        gap: 8px;
    }
        .payroll-table th,
        .payroll-table td {
            padding: 12px 10px;
            border: 1px solid #dee2e6;
            text-align: left;
            font-size: 14px;
        }

        .payroll-table th {
            background-color: #f1f3f5;
            font-weight: 600;
        }

        .payroll-table tbody tr:nth-child(even) {
            background-color: #f9f9f9;
        }

        .payroll-table tbody tr:hover {
            background-color: #eef5ff;
        }

    .view-button,
    .edit-button,
    .delete-button {
        color: white;
        padding: 6px 10px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 13px;
        margin-right: 5px;
        text-decoration: none;
        transition: background-color 0.2s ease;
    }

    .view-button {
        background-color: #17a2b8;
    }

        .view-button:hover {
            background-color: #138496;
        }

    .edit-button {
        background-color: #ffc107;
        color: #212529;
    }

        .edit-button:hover {
            background-color: #e0a800;
        }

    .delete-button {
        background-color: #dc3545;
    }

        .delete-button:hover {
            background-color: #c82333;
        }

    .no-records {
        font-style: italic;
        color: #666;
        margin-top: 20px;
        text-align: center;
    }
</style>


<form method="get" class="filter-container">
    <div>
        <label for="search">Search by Name or Salary ID:</label><br />
        <input type="text" id="search" name="search" value="@ViewBag.Search" class="filter-input" placeholder="Search by Name or Salary ID..." />
    </div>
    <div>
        <label for="departmentId">Department:</label><br />
        @Html.DropDownList("departmentId", (SelectList)ViewBag.Departments, "All", new { @class = "filter-select" })
    </div>
    <div>
        <label for="positionId">Position:</label><br />
        @Html.DropDownList("positionId", (SelectList)ViewBag.Positions, "All", new { @class = "filter-select" })
    </div>
    <div>
        <label for="salaryMonth">Salary Month:</label><br />
        <input type="month" id="salaryMonth" name="salaryMonth"
               value="@(ViewBag.SalaryMonth != null ? ((DateTime)ViewBag.SalaryMonth).ToString("yyyy-MM") : "")"
               class="filter-input" />
    </div>
    <div>
        <button type="submit" class="filter-button">
            <i class="fas fa-filter"></i> Filter
        </button>
    </div>
    <div>
        <br />
        <a href="@Url.Action("Add", "Payroll")" class="btn btn-primary">
            <i class="fas fa-plus"></i> Create New Payroll
        </a>
    </div>
</form>


@if (Model != null && Model.Any())
{
    <table class="payroll-table">
        <thead>
            <tr>
                <th>Salary ID</th>
                <th>Employee Name</th>
                <th>Department</th>
                <th>Position</th>
                <th>Salary Month</th>
                <th>Work Days</th>
                <th>Absent Days</th>
                <th>Leave Days</th>
                <th>Base Salary</th>
                <th>Bonus</th>
                <th>Deductions</th>
                <th>Net Salary</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var payroll in Model.OrderBy(p => p.SalaryID))
            {
                <tr>
                    <td>@payroll.SalaryID</td>
                    <td>@payroll.FullName</td>
                    <td>@payroll.DepartmentName</td>
                    <td>@payroll.PositionName</td>
                    <td>@payroll.SalaryMonth.ToString("MM/yyyy")</td>
                    <td>@payroll.WorkDays</td>
                    <td>@payroll.AbsentDays</td>
                    <td>@payroll.LeaveDays</td>
                    <td>@payroll.BaseSalary.ToString("N0")</td>
                    <td>@payroll.Bonus.ToString("N0")</td>
                    <td>@payroll.Deductions.ToString("N0")</td>
                    <td>@payroll.NetSalary.ToString("N0")</td>
                    <td class="action-buttons">
                        <a href="@Url.Action("Details", "Payroll", new { id = payroll.SalaryID })" class="view-button" title="View Details">
                            <i class="fas fa-eye"></i> View
                        </a>
                        <a href="@Url.Action("Edit", "Payroll", new { id = payroll.SalaryID })" class="edit-button" title="Edit Record">
                            <i class="fas fa-edit"></i> Edit
                        </a>
                        <button type="button" class="delete-button" data-id="@payroll.SalaryID" title="Delete Record">
                            <i class="fas fa-trash-alt"></i> Delete
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No payroll records found.</p>
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
$(document).ready(function() {
    $('.delete-button').click(function() {
        var salaryId = $(this).data('id');

        Swal.fire({
            title: 'Confirm Deletion?',
            text: "Are you sure you want to delete this record? This action cannot be undone!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#dc3545',
            cancelButtonColor: '#6c757d',
            confirmButtonText: 'Yes, delete it!',
            cancelButtonText: 'Cancel'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: '@Url.Action("Delete", "Payroll")',
                    type: 'POST',
                    data: { id: salaryId },
                    success: function(response) {
                        if (response.success) {
                            Swal.fire(
                                'Deleted!',
                                response.message || 'The record has been successfully deleted.',
                                'success'
                            ).then(() => {
                                location.reload();
                            });
                        } else {
                            Swal.fire(
                                'Error!',
                                response.message || 'Could not delete the record. Please try again.',
                                'error'
                            );
                        }
                    },
                    error: function() {
                        Swal.fire(
                            'Error!',
                            'An error occurred during deletion. Please check your network connection or contact the administrator.',
                            'error'
                        );
                    }
                });
            }
        });
    });
});
</script>
